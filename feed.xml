<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-12-13T21:15:07-08:00</updated><id>/feed.xml</id><title type="html">Swift Software Group</title><subtitle>&amp;copy; Swift Software Group</subtitle><author><name>Swift Software Group</name></author><entry><title type="html">Getting Started with C++ and Visual Studio Code on Windows</title><link href="/getting-started-cpp-visual-studio-code-windows/" rel="alternate" type="text/html" title="Getting Started with C++ and Visual Studio Code on Windows" /><published>2023-11-22T00:00:00-08:00</published><updated>2023-11-22T00:00:00-08:00</updated><id>/getting-started-cpp-visual-studio-code-windows</id><content type="html" xml:base="/getting-started-cpp-visual-studio-code-windows/"><![CDATA[<p>Before going through these steps make sure you have done <a href="/setup-cpp-development-environment-windows">Setup C++ development environment on Windows</a></p>

<h2 id="visual-studio-code">Visual Studio Code</h2>

<p>Download and install from <a href="https://code.visualstudio.com/download">Visual Studio Code</a> site.</p>

<p>Open Visual Studio Code and press <code class="language-plaintext highlighter-rouge">Cmd + Shift + P</code>. Select <code class="language-plaintext highlighter-rouge">Shell Command: Install 'code' command in PATH</code>.</p>

<h2 id="c-project">C++ Project</h2>

<p>Create a directory called simple in <code class="language-plaintext highlighter-rouge">~/cpp/simple</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/cpp/simple
</code></pre></div></div>

<p>Add a configuration script <code class="language-plaintext highlighter-rouge">configure.ps1</code>:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$temp_file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">IO.Path</span><span class="p">]::</span><span class="n">GetTempFileName</span><span class="p">()</span><span class="w">

</span><span class="c"># find where Visual Studio 2022 is installed</span><span class="w">
</span><span class="nv">$vs_install_dir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">$</span><span class="p">(</span><span class="n">Get-VSSetupInstance</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select-VSSetupInstance</span><span class="w"> </span><span class="nt">-Version</span><span class="w"> </span><span class="s1">'[17.0,18.0]'</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Select-Object</span><span class="w"> </span><span class="nt">-ExpandProperty</span><span class="w"> </span><span class="nx">InstallationPath</span><span class="p">)</span><span class="w">
</span><span class="nv">$vs_common_tools</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"</span><span class="nv">${vs_install_dir}</span><span class="s2">/Common7/Tools/"</span><span class="w">

</span><span class="c"># run `VsDevCmd.bat -arch=amd64 -host_arch=amd64` and save environment to $temp_file</span><span class="w">
</span><span class="n">cmd</span><span class="w"> </span><span class="nx">/c</span><span class="w"> </span><span class="s2">" </span><span class="se">`"</span><span class="nv">$vs_common_tools</span><span class="s2">/VsDevCmd.bat</span><span class="se">`"</span><span class="s2"> -arch=amd64 -host_arch=amd64 &amp;&amp; set &gt; </span><span class="se">`"</span><span class="nv">$temp_file</span><span class="se">`"</span><span class="s2">"</span><span class="w">

</span><span class="c"># copy the environment variables into PowerShell</span><span class="w">
</span><span class="n">Get-Content</span><span class="w"> </span><span class="nv">$temp_file</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Foreach-Object</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="kr">if</span><span class="p">(</span><span class="bp">$_</span><span class="w"> </span><span class="o">-match</span><span class="w"> </span><span class="s2">"^(.*?)=(.*)$"</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">Set-Content</span><span class="w"> </span><span class="s2">"env:\</span><span class="si">$(</span><span class="nv">$matches</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">)</span><span class="s2">"</span><span class="w"> </span><span class="nv">$matches</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">Remove-Item</span><span class="w"> </span><span class="nv">$temp_file</span><span class="w">
</span></code></pre></div></div>

<p>Open the directory in Visual Studio Code. It is important to source the <code class="language-plaintext highlighter-rouge">configure.ps1</code> script before running <code class="language-plaintext highlighter-rouge">code .</code> in order to setup the correct C++ environment:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cd</span><span class="w"> </span><span class="nx">~/cpp/simple</span><span class="w">

</span><span class="o">.</span><span class="w"> </span><span class="o">.</span><span class="n">\configure.ps1</span><span class="w">

</span><span class="n">code</span><span class="w"> </span><span class="o">.</span><span class="w">
</span></code></pre></div></div>

<p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-extension-pack">C/C++ Extension Pack</a>.</p>

<h2 id="project-files">Project Files</h2>

<p>Add the following files:</p>

<h3 id="srcmaincpp"><code class="language-plaintext highlighter-rouge">src/main.cpp</code></h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello CMake!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="cmakeliststxt"><code class="language-plaintext highlighter-rouge">CMakeLists.txt</code></h3>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.20<span class="p">)</span>

<span class="nb">project</span><span class="p">(</span>simple<span class="p">)</span>

<span class="nb">add_executable</span><span class="p">(</span>simple src/main.cpp<span class="p">)</span>
</code></pre></div></div>

<h3 id="buildps1"><code class="language-plaintext highlighter-rouge">build.ps1</code></h3>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">New-Item</span><span class="w"> </span><span class="nt">-Force</span><span class="w"> </span><span class="nt">-Path</span><span class="w"> </span><span class="o">.</span><span class="nx">/build/debug</span><span class="w"> </span><span class="nt">-ItemType</span><span class="w"> </span><span class="nx">Directory</span><span class="w"> 
</span><span class="n">Push-Location</span><span class="w"> </span><span class="o">.</span><span class="nx">/build/debug</span><span class="w">
    </span><span class="n">cmake</span><span class="w"> </span><span class="nt">-G</span><span class="w"> </span><span class="s1">'Ninja'</span><span class="w"> </span><span class="nt">-DCMAKE_BUILD_TYPE</span><span class="o">=</span><span class="n">debug</span><span class="w"> </span><span class="o">..</span><span class="nx">/..</span><span class="w">
    </span><span class="n">ninja</span><span class="w">
</span><span class="nx">Pop-Location</span><span class="w">
</span></code></pre></div></div>

<h3 id="gitignore"><code class="language-plaintext highlighter-rouge">.gitignore</code></h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>build/
</code></pre></div></div>

<h2 id="test-the-build">Test the build</h2>

<p>Open Terminal in Visual Studio Code and test the build from command line:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.ps1
</code></pre></div></div>

<h2 id="automate-the-build">Automate the build</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodetasksjson"><code class="language-plaintext highlighter-rouge">.vscode/tasks.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"label"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"shell"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"windows"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build.ps1"</span><span class="p">,</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"group"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"kind"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"isDefault"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Test the build by pressing <code class="language-plaintext highlighter-rouge">Ctrl + Shift + B</code>. Visual Studio Code should execute the <code class="language-plaintext highlighter-rouge">build.ps1</code> script automatically.</p>

<h2 id="setup-debugging">Setup Debugging</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodelaunchjson"><code class="language-plaintext highlighter-rouge">.vscode/launch.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Debug (cppvsdbg)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cppdbg"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"cwd"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"windows"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cppvsdbg"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"program"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build/debug/simple.exe"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"preLaunchTask"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Build"</span><span class="w">
        </span><span class="p">}</span><span class="w">        
   </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="test-the-debugging">Test the debugging</h2>

<p>Set a breakpoint on the first line of <code class="language-plaintext highlighter-rouge">int main()</code> inside <code class="language-plaintext highlighter-rouge">src/main.cpp</code>. Press <code class="language-plaintext highlighter-rouge">F5</code> to launch the debugger. It should stop at the breakpoint.</p>]]></content><author><name>Swift Software Group</name></author><category term="vscode" /><category term="cpp" /><category term="windows" /><summary type="html"><![CDATA[Before going through these steps make sure you have done Setup C++ development environment on Windows Visual Studio Code Download and install from Visual Studio Code site. Open Visual Studio Code and press Cmd + Shift + P. Select Shell Command: Install 'code' command in PATH.]]></summary></entry><entry><title type="html">Setup C++ development environment on Windows</title><link href="/setup-cpp-development-environment-windows/" rel="alternate" type="text/html" title="Setup C++ development environment on Windows" /><published>2023-11-21T00:00:00-08:00</published><updated>2023-11-21T00:00:00-08:00</updated><id>/setup-cpp-development-environment-windows</id><content type="html" xml:base="/setup-cpp-development-environment-windows/"><![CDATA[<p>These steps were tested on Windows 11, 23H2. Scripts are <code class="language-plaintext highlighter-rouge">PowerShell</code>.</p>

<h2 id="visual-studio-2022">Visual Studio 2022</h2>

<p>This is needed for the C++ compiler. Install <a href="https://visualstudio.microsoft.com/vs/older-downloads/">Visual Studio 2022 Community Edition</a>.</p>

<p>During installation select C++ desktop development and latest Windows 10 and Windows 11 SDKs.</p>

<p>After installation open Visual Studio and check for updates. Install the latest 2022 version that is available.</p>

<h2 id="cmake">CMake</h2>

<p>Install via Windows Package Manager:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">winget</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="nx">kitware.cmake</span><span class="w">
</span></code></pre></div></div>

<h2 id="ninja">ninja</h2>

<p>Install via Windows Package Manager:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">winget</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="nx">Ninja-build.Ninja</span><span class="w">
</span></code></pre></div></div>

<h2 id="powershell-configuration">PowerShell Configuration</h2>

<p>This will allow you to execute PowerShell scripts locally on your machine. In PowerShell as Administrator:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Set-ExecutionPolicy</span><span class="w"> </span><span class="nt">-ExecutionPolicy</span><span class="w"> </span><span class="nx">RemoteSigned</span><span class="w"> </span><span class="nt">-Scope</span><span class="w"> </span><span class="nx">LocalMachine</span><span class="w">
</span></code></pre></div></div>
<h3 id="environment">Environment</h3>

<p>Update <code class="language-plaintext highlighter-rouge">$env:PSModulePath</code>  so that you can use PowerShell modules. In PowerShell as Administrator:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">Environment</span><span class="p">]::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">"PSModulePath"</span><span class="p">,</span><span class="w"> </span><span class="s2">"</span><span class="bp">$HOME</span><span class="s2">/Documents/WindowsPowerShell/Modules;"</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">PSModulePath</span><span class="p">,</span><span class="w"> </span><span class="s2">"Machine"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="vssetup-module">VSSetup Module</h3>

<p>In PowerShell as Administrator:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Install-Module</span><span class="w"> </span><span class="nx">VSSetup</span><span class="w"> </span><span class="nt">-Scope</span><span class="w"> </span><span class="nx">CurrentUser</span><span class="w">
</span></code></pre></div></div>
<p>Close and reopen PowerShell. Now you can use the VSSetup commands.</p>

<p>List the Visual Studio installations:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-VSSetupInstance</span><span class="w">
</span></code></pre></div></div>

<p>This finds the installation path for Visual Studio 2022:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-VSSetupInstance</span><span class="w"> </span><span class="se">`
</span><span class="o">|</span><span class="w"> </span><span class="n">Select-VSSetupInstance</span><span class="w"> </span><span class="nt">-Version</span><span class="w"> </span><span class="s1">'[17.0,]'</span><span class="w"> </span><span class="se">`
</span><span class="o">|</span><span class="w"> </span><span class="n">Select-Object</span><span class="w"> </span><span class="nt">-ExpandProperty</span><span class="w"> </span><span class="nx">InstallationPath</span><span class="w">
</span></code></pre></div></div>

<p>See <a href="https://github.com/Microsoft/vssetup.powershell/wiki/Selecting-an-Instance">Selecting an Instance</a></p>]]></content><author><name>Swift Software Group</name></author><category term="cpp" /><category term="windows" /><summary type="html"><![CDATA[These steps were tested on Windows 11, 23H2. Scripts are PowerShell. Visual Studio 2022 This is needed for the C++ compiler. Install Visual Studio 2022 Community Edition. During installation select C++ desktop development and latest Windows 10 and Windows 11 SDKs. After installation open Visual Studio and check for updates. Install the latest 2022 version that is available.]]></summary></entry><entry><title type="html">Getting Started with .NET and Visual Studio Code on Ubuntu</title><link href="/getting-started-net-visual-studio-code-ubuntu/" rel="alternate" type="text/html" title="Getting Started with .NET and Visual Studio Code on Ubuntu" /><published>2023-11-20T00:00:00-08:00</published><updated>2023-11-20T00:00:00-08:00</updated><id>/getting-started-net-visual-studio-code-ubuntu</id><content type="html" xml:base="/getting-started-net-visual-studio-code-ubuntu/"><![CDATA[<p>Before going through these steps make sure you have done <a href="/setup-net-development-environment-ubuntu">Setup .NET development environment on Ubuntu</a></p>

<h2 id="visual-studio-code">Visual Studio Code</h2>

<p>Download and install from <a href="https://code.visualstudio.com/download">Visual Studio Code</a> site.</p>

<p>Open Visual Studio Code and press <code class="language-plaintext highlighter-rouge">Ctrl + Shift + P</code>. Select <code class="language-plaintext highlighter-rouge">Shell Command: Install 'code' command in PATH</code>.</p>

<p>Close Visual Studio Code.</p>

<h2 id="project-directory">Project Directory</h2>

<p>Create a directory called <code class="language-plaintext highlighter-rouge">simple</code> in <code class="language-plaintext highlighter-rouge">~/net/simple</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/net/simple
</code></pre></div></div>

<h2 id="net-project-files">.NET Project Files</h2>

<p>Create the project files:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.dotnet:</span><span class="nv">$PATH</span><span class="s2">"</span>

<span class="nb">cd</span> ~/net/simple

<span class="c"># Switch to use .NET SDK 6.0, 7.0 or 8.0. We do 8.0 here but give the commands for other versions </span>
<span class="c"># dotnet new globaljson --sdk-version 6.0.417 --roll-forward latestPatch</span>
<span class="c"># dotnet new globaljson --sdk-version 7.0.404 --roll-forward latestPatch</span>
dotnet new globaljson <span class="nt">--sdk-version</span> 8.0.100 <span class="nt">--roll-forward</span> latestPatch

<span class="c"># create new console application and project</span>
dotnet new console <span class="nt">--framework</span> net6.0

<span class="c"># create new solution and add the project to it</span>
dotnet new sln
dotnet sln add simple.csproj

<span class="c"># add .gitignore</span>
dotnet new gitignore
</code></pre></div></div>

<p>Open the directory in Visual Studio Code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.dotnet:</span><span class="nv">$PATH</span><span class="s2">"</span>

<span class="nb">cd</span> ~/net/simple
code <span class="nb">.</span>
</code></pre></div></div>

<p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit">C# Dev Kit extension</a> for Visual Studio Code.</p>

<h2 id="automate-the-build">Automate the build</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodetasksjson"><code class="language-plaintext highlighter-rouge">.vscode/tasks.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"task"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"problemMatcher"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="nl">"label"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet: build"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Test the build by pressing <code class="language-plaintext highlighter-rouge">Ctrl + Shift + B</code>. Visual Studio Code should execute the <code class="language-plaintext highlighter-rouge">build.sh</code> script automatically.</p>

<h2 id="setup-debugging">Setup Debugging</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodelaunchjson"><code class="language-plaintext highlighter-rouge">.vscode/launch.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">".NET Core Launch (console)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"coreclr"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"preLaunchTask"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet: build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"program"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/bin/Debug/net6.0/simple.dll"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="nl">"cwd"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"console"</span><span class="p">:</span><span class="w"> </span><span class="s2">"internalConsole"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"stopAtEntry"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="test-the-debugging">Test the debugging</h2>

<p>Set a breakpoint at the <code class="language-plaintext highlighter-rouge">Console.WriteLine("Hello, World!");</code> line in <code class="language-plaintext highlighter-rouge">Programs.cs</code>:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// See https://aka.ms/new-console-template for more information</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
</code></pre></div></div>

<p>Press <code class="language-plaintext highlighter-rouge">F5</code> to launch the debugger. It should stop at the breakpoint.</p>]]></content><author><name>Swift Software Group</name></author><category term="csharp" /><category term="vscode" /><category term="dotnet" /><category term="linux" /><category term="ubuntu" /><summary type="html"><![CDATA[Before going through these steps make sure you have done Setup .NET development environment on Ubuntu Visual Studio Code Download and install from Visual Studio Code site. Open Visual Studio Code and press Ctrl + Shift + P. Select Shell Command: Install 'code' command in PATH. Close Visual Studio Code.]]></summary></entry><entry><title type="html">Setup .NET development environment on Ubuntu</title><link href="/setup-net-development-environment-ubuntu/" rel="alternate" type="text/html" title="Setup .NET development environment on Ubuntu" /><published>2023-11-19T00:00:00-08:00</published><updated>2023-11-19T00:00:00-08:00</updated><id>/setup-net-development-environment-ubuntu</id><content type="html" xml:base="/setup-net-development-environment-ubuntu/"><![CDATA[<h1 id="setup-for-ubuntu">Setup for Ubuntu</h1>

<p>Download the <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd
</span>curl <span class="nt">-sSL</span> https://dot.net/v1/dotnet-install.sh <span class="o">&gt;</span> dotnet-install.sh
<span class="nb">chmod</span> +x dotnet-install.sh
</code></pre></div></div>

<h2 id="net-runtime">.NET Runtime</h2>

<h3 id="net-runtime-60-lts">.NET Runtime 6.0 (LTS)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 6.0 --version latest
</code></pre></div></div>

<h3 id="net-runtime-70">.NET Runtime 7.0</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 7.0 --version latest
</code></pre></div></div>

<h3 id="net-runtime-80-lts">.NET Runtime 8.0 (LTS)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 8.0 --version latest
</code></pre></div></div>

<h2 id="net-sdk">.NET SDK</h2>

<h3 id="net-sdk-60">.NET SDK 6.0</h3>

<p>This is needed by the Visual Studio Code C# extension. Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 6.0
</code></pre></div></div>

<h3 id="net-sdk-70">.NET SDK 7.0</h3>

<p>This is needed by the Visual Studio Code C# extension. Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 7.0
</code></pre></div></div>

<h3 id="net-sdk-80">.NET SDK 8.0</h3>

<p>Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 8.0
</code></pre></div></div>

<h2 id="test">Test</h2>

<p>Test that you can run the <code class="language-plaintext highlighter-rouge">dotnet</code> CLI (command line interface)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/.dotnet/dotnet <span class="nt">--version</span>
~/.dotnet/dotnet new console <span class="nt">--help</span>
</code></pre></div></div>]]></content><author><name>Swift Software Group</name></author><category term="csharp" /><category term="dotnet" /><category term="linux" /><category term="ubuntu" /><summary type="html"><![CDATA[Setup for Ubuntu Download the dotnet-install.sh script cd curl -sSL https://dot.net/v1/dotnet-install.sh &gt; dotnet-install.sh chmod +x dotnet-install.sh]]></summary></entry><entry><title type="html">Getting Started with C++ and Visual Studio Code on Ubuntu</title><link href="/getting-started-cpp-visual-studio-code-ubuntu/" rel="alternate" type="text/html" title="Getting Started with C++ and Visual Studio Code on Ubuntu" /><published>2023-11-18T00:00:00-08:00</published><updated>2023-11-18T00:00:00-08:00</updated><id>/getting-started-cpp-visual-studio-code-ubuntu</id><content type="html" xml:base="/getting-started-cpp-visual-studio-code-ubuntu/"><![CDATA[<p>Before going through these steps make sure you have done <a href="/setup-cpp-development-environment-ubuntu">Setup C++ development environment on Ubuntu</a></p>

<h2 id="visual-studio-code">Visual Studio Code</h2>

<p>Download and install from <a href="https://code.visualstudio.com/download">Visual Studio Code</a> site.</p>

<p>Open Visual Studio Code and press <code class="language-plaintext highlighter-rouge">Cmd + Shift + P</code>. Select <code class="language-plaintext highlighter-rouge">Shell Command: Install 'code' command in PATH</code>.</p>

<h2 id="c-project">C++ Project</h2>

<p>Create a directory called simple in <code class="language-plaintext highlighter-rouge">~/cpp/simple</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/cpp/simple
</code></pre></div></div>

<p>Open the directory in Visual Studio Code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> ~/cpp/simple
code <span class="nb">.</span>
</code></pre></div></div>

<p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-extension-pack">C/C++ Extension Pack</a>.</p>

<h2 id="project-files">Project Files</h2>

<p>Add the following files:</p>

<h3 id="srcmaincpp"><code class="language-plaintext highlighter-rouge">src/main.cpp</code></h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello CMake!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="cmakeliststxt"><code class="language-plaintext highlighter-rouge">CMakeLists.txt</code></h3>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.20<span class="p">)</span>

<span class="nb">project</span><span class="p">(</span>simple<span class="p">)</span>

<span class="nb">add_executable</span><span class="p">(</span>simple src/main.cpp<span class="p">)</span>
</code></pre></div></div>

<h3 id="buildsh"><code class="language-plaintext highlighter-rouge">build.sh</code></h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/usr/bin/env bash</span>

<span class="nb">mkdir</span> <span class="nt">-p</span> ./build/debug
<span class="nb">pushd</span> ./build/debug
    cmake <span class="nt">-G</span> <span class="s1">'Ninja'</span> <span class="nt">-DCMAKE_BUILD_TYPE</span><span class="o">=</span>Debug  ../.. <span class="o">&amp;&amp;</span> <span class="se">\</span>
    ninja
    <span class="nv">ret</span><span class="o">=</span><span class="nv">$?</span>
<span class="nb">popd</span>  
</code></pre></div></div>

<p>Make it executable:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x build.sh
</code></pre></div></div>

<h3 id="gitignore"><code class="language-plaintext highlighter-rouge">.gitignore</code></h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.cache/
build/
</code></pre></div></div>

<h2 id="test-the-build">Test the build</h2>

<p>Open Terminal in Visual Studio Code and test the build from command line:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.sh
</code></pre></div></div>

<h2 id="automate-the-build">Automate the build</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodetasksjson"><code class="language-plaintext highlighter-rouge">.vscode/tasks.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"label"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"shell"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"linux"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build.sh"</span><span class="p">,</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"group"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"kind"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"isDefault"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Test the build by pressing <code class="language-plaintext highlighter-rouge">Ctrl + B</code>. Visual Studio Code should execute the <code class="language-plaintext highlighter-rouge">build.sh</code> script automatically.</p>

<h2 id="setup-debugging">Setup Debugging</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodelaunchjson"><code class="language-plaintext highlighter-rouge">.vscode/launch.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Launch (gdb)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cppdbg"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"cwd"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"linux"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"program"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build/debug/simple"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"MIMode"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gdb"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">    
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="test-the-debugging">Test the debugging</h2>

<p>Set a breakpoint on the first line of <code class="language-plaintext highlighter-rouge">int main()</code> inside <code class="language-plaintext highlighter-rouge">src/main.cpp</code>. Press <code class="language-plaintext highlighter-rouge">F5</code> to launch the debugger. It should stop at the breakpoint.</p>]]></content><author><name>Swift Software Group</name></author><category term="vscode" /><category term="cpp" /><category term="linux" /><category term="ubuntu" /><summary type="html"><![CDATA[Before going through these steps make sure you have done Setup C++ development environment on Ubuntu Visual Studio Code Download and install from Visual Studio Code site. Open Visual Studio Code and press Cmd + Shift + P. Select Shell Command: Install 'code' command in PATH.]]></summary></entry><entry><title type="html">Setup C++ development environment on Ubuntu</title><link href="/setup-cpp-development-environment-ubuntu/" rel="alternate" type="text/html" title="Setup C++ development environment on Ubuntu" /><published>2023-11-17T00:00:00-08:00</published><updated>2023-11-17T00:00:00-08:00</updated><id>/setup-cpp-development-environment-ubuntu</id><content type="html" xml:base="/setup-cpp-development-environment-ubuntu/"><![CDATA[<p>These steps were tested on Ubuntu 22.04.3 LTS. Scripts are <code class="language-plaintext highlighter-rouge">bash</code>.</p>

<h3 id="compilers">Compilers</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>build-essential
</code></pre></div></div>

<h3 id="cmake">CMake</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>cmake
</code></pre></div></div>

<h3 id="ninja">ninja</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>ninja-build
</code></pre></div></div>]]></content><author><name>Swift Software Group</name></author><category term="cpp" /><category term="linux" /><category term="ubuntu" /><summary type="html"><![CDATA[These steps were tested on Ubuntu 22.04.3 LTS. Scripts are bash. Compilers sudo apt install build-essential]]></summary></entry><entry><title type="html">Getting Started with .NET and Visual Studio Code on macOS</title><link href="/getting-started-net-visual-studio-code-macos/" rel="alternate" type="text/html" title="Getting Started with .NET and Visual Studio Code on macOS" /><published>2023-11-15T00:00:00-08:00</published><updated>2023-11-15T00:00:00-08:00</updated><id>/getting-started-net-visual-studio-code-macos</id><content type="html" xml:base="/getting-started-net-visual-studio-code-macos/"><![CDATA[<p>Before going through these steps make sure you have done <a href="/setup-net-development-environment-macos">Setup .NET development environment on macOS</a></p>

<h2 id="visual-studio-code">Visual Studio Code</h2>

<p>Download and install from <a href="https://code.visualstudio.com/download">Visual Studio Code</a> site.</p>

<p>Open Visual Studio Code and press <code class="language-plaintext highlighter-rouge">Cmd + Shift + p</code>. Select <code class="language-plaintext highlighter-rouge">Shell Command: Install 'code' command in PATH</code>.</p>

<p>Close Visual Studio Code.</p>

<h2 id="project-directory">Project Directory</h2>

<p>Create a directory called <code class="language-plaintext highlighter-rouge">simple</code> in <code class="language-plaintext highlighter-rouge">~/net/simple</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/net/simple
</code></pre></div></div>

<h2 id="net-project-files">.NET Project Files</h2>

<p>Create the project files:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.dotnet:</span><span class="nv">$PATH</span><span class="s2">"</span>

<span class="nb">cd</span> ~/net/simple

<span class="c"># Switch to use .NET SDK 6.0, 7.0 or 8.0. We do 8.0 here but give the commands for other versions </span>
<span class="c"># dotnet new globaljson --sdk-version 6.0.417 --roll-forward latestPatch</span>
<span class="c"># dotnet new globaljson --sdk-version 7.0.404 --roll-forward latestPatch</span>
dotnet new globaljson <span class="nt">--sdk-version</span> 8.0.100 <span class="nt">--roll-forward</span> latestPatch

<span class="c"># create new console application and project</span>
dotnet new console <span class="nt">--framework</span> net6.0

<span class="c"># create new solution and add the project to it</span>
dotnet new sln
dotnet sln add simple.csproj

<span class="c"># add .gitignore</span>
dotnet new gitignore
</code></pre></div></div>

<p>Open the directory in Visual Studio Code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.dotnet:</span><span class="nv">$PATH</span><span class="s2">"</span>

<span class="nb">cd</span> ~/net/simple
code <span class="nb">.</span>
</code></pre></div></div>

<p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit">C# Dev Kit extension</a> for Visual Studio Code.</p>

<h2 id="automate-the-build">Automate the build</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodetasksjson"><code class="language-plaintext highlighter-rouge">.vscode/tasks.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"task"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"problemMatcher"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="nl">"label"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet: build"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Test the build by pressing <code class="language-plaintext highlighter-rouge">Cmd + B</code>. Visual Studio Code should execute the <code class="language-plaintext highlighter-rouge">build.sh</code> script automatically.</p>

<h2 id="setup-debugging">Setup Debugging</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodelaunchjson"><code class="language-plaintext highlighter-rouge">.vscode/launch.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">".NET Core Launch (console)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"coreclr"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"preLaunchTask"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dotnet: build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"program"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/bin/Debug/net6.0/simple.dll"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="nl">"cwd"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"console"</span><span class="p">:</span><span class="w"> </span><span class="s2">"internalConsole"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"stopAtEntry"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="test-the-debugging">Test the debugging</h2>

<p>Set a breakpoint at the <code class="language-plaintext highlighter-rouge">Console.WriteLine("Hello, World!");</code> line in <code class="language-plaintext highlighter-rouge">Programs.cs</code>:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// See https://aka.ms/new-console-template for more information</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
</code></pre></div></div>

<p>Press <code class="language-plaintext highlighter-rouge">F5</code> to launch the debugger. It should stop at the breakpoint.</p>]]></content><author><name>Swift Software Group</name></author><category term="csharp" /><category term="vscode" /><category term="dotnet" /><category term="macos" /><summary type="html"><![CDATA[Before going through these steps make sure you have done Setup .NET development environment on macOS Visual Studio Code Download and install from Visual Studio Code site. Open Visual Studio Code and press Cmd + Shift + p. Select Shell Command: Install 'code' command in PATH. Close Visual Studio Code.]]></summary></entry><entry><title type="html">Setup .NET development environment on macOS</title><link href="/setup-net-development-environment-macos/" rel="alternate" type="text/html" title="Setup .NET development environment on macOS" /><published>2023-11-14T00:00:00-08:00</published><updated>2023-11-14T00:00:00-08:00</updated><id>/setup-net-development-environment-macos</id><content type="html" xml:base="/setup-net-development-environment-macos/"><![CDATA[<h1 id="setup-for-macos">Setup for macOS</h1>

<p>Download the <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd
</span>curl <span class="nt">-sSL</span> https://dot.net/v1/dotnet-install.sh <span class="o">&gt;</span> dotnet-install.sh
<span class="nb">chmod</span> +x dotnet-install.sh
</code></pre></div></div>

<h2 id="net-runtime">.NET Runtime</h2>

<h3 id="net-runtime-60-lts">.NET Runtime 6.0 (LTS)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 6.0 --version latest
</code></pre></div></div>

<p>or download and install from <a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0">Microsoft</a></p>

<h3 id="net-runtime-70">.NET Runtime 7.0</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 7.0 --version latest
</code></pre></div></div>

<p>or download and install from <a href="https://dotnet.microsoft.com/en-us/download/dotnet/7.0">Microsoft</a></p>

<h3 id="net-runtime-80-lts">.NET Runtime 8.0 (LTS)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh --runtime dotnet --channel 8.0 --version latest
</code></pre></div></div>

<p>or download and install from <a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0">Microsoft</a></p>

<h2 id="net-sdk">.NET SDK</h2>

<h3 id="net-sdk-60">.NET SDK 6.0</h3>

<p>This is needed by the Visual Studio Code C# extension. Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 6.0
</code></pre></div></div>

<h3 id="net-sdk-70">.NET SDK 7.0</h3>

<p>This is needed by the Visual Studio Code C# extension. Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 7.0
</code></pre></div></div>

<h3 id="net-sdk-80">.NET SDK 8.0</h3>

<p>Install with <code class="language-plaintext highlighter-rouge">dotnet-install.sh</code> script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./dotnet-install.sh <span class="nt">--channel</span> 8.0
</code></pre></div></div>

<h2 id="test">Test</h2>

<p>Test that you can run the <code class="language-plaintext highlighter-rouge">dotnet</code> CLI (command line interface)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/.dotnet/dotnet <span class="nt">--version</span>
~/.dotnet/dotnet new console <span class="nt">--help</span>
</code></pre></div></div>]]></content><author><name>Swift Software Group</name></author><category term="csharp" /><category term="dotnet" /><category term="macos" /><summary type="html"><![CDATA[Setup for macOS Download the dotnet-install.sh script cd curl -sSL https://dot.net/v1/dotnet-install.sh &gt; dotnet-install.sh chmod +x dotnet-install.sh]]></summary></entry><entry><title type="html">Configure Ruby Environment on Ubuntu</title><link href="/configure-ruby-environment-ubuntu/" rel="alternate" type="text/html" title="Configure Ruby Environment on Ubuntu" /><published>2023-10-08T00:00:00-07:00</published><updated>2023-10-08T00:00:00-07:00</updated><id>/configure-ruby-environment-ubuntu</id><content type="html" xml:base="/configure-ruby-environment-ubuntu/"><![CDATA[<p>This is a simple guide for configuring a Ruby 2 environment on Ubuntu. This was tested for Ruby 2.7.2 on Ubuntu 22.04.3. All scripts are <code class="language-plaintext highlighter-rouge">bash</code>.</p>

<h2 id="compilers">Compilers</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>build-essential
</code></pre></div></div>

<h2 id="rvm">rvm</h2>

<p><code class="language-plaintext highlighter-rouge">rvm</code> is a Ruby version manager</p>

<p>Install:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--keyserver</span> hkp://keyserver.ubuntu.com <span class="nt">--recv-keys</span> 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
curl <span class="nt">-sSL</span> https://get.rvm.io | bash <span class="nt">-s</span> <span class="nt">--</span> stable <span class="nt">--ignore-dotfiles</span>
</code></pre></div></div>

<p>Test:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> ~/.rvm/scripts/rvm
rvm info
</code></pre></div></div>

<h2 id="ruby">Ruby</h2>

<p>Install via <code class="language-plaintext highlighter-rouge">rvm</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> ~/.rvm/scripts/rvm
rvm pkg <span class="nb">install </span>openssl
rvm <span class="nb">install </span>2.7.2 <span class="nt">--with-openssl-dir</span><span class="o">=</span><span class="nv">$HOME</span>/.rvm/usr
</code></pre></div></div>

<p>Test:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rvm use
ruby <span class="nt">--version</span>

<span class="c"># you should get output similar to this:</span>
<span class="c"># ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]</span>
</code></pre></div></div>]]></content><author><name>Swift Software Group</name></author><category term="ruby" /><category term="linux" /><category term="ubuntu" /><summary type="html"><![CDATA[This is a simple guide for configuring a Ruby 2 environment on Ubuntu. This was tested for Ruby 2.7.2 on Ubuntu 22.04.3. All scripts are bash. Compilers sudo apt install build-essential]]></summary></entry><entry><title type="html">Getting Started with C++ and Visual Studio Code on macOS</title><link href="/getting-started-cpp-visual-studio-code-macos/" rel="alternate" type="text/html" title="Getting Started with C++ and Visual Studio Code on macOS" /><published>2023-10-07T00:00:00-07:00</published><updated>2023-10-07T00:00:00-07:00</updated><id>/getting-started-cpp-visual-studio-code-macos</id><content type="html" xml:base="/getting-started-cpp-visual-studio-code-macos/"><![CDATA[<p>Before going through these steps make sure you have done <a href="/setup-cpp-development-environment-macos">Setup C++ development environment on macOS</a></p>

<h2 id="visual-studio-code">Visual Studio Code</h2>

<p>Download and install from <a href="https://code.visualstudio.com/download">Visual Studio Code</a> site.</p>

<p>Open Visual Studio Code and press <code class="language-plaintext highlighter-rouge">Cmd + Shift + p</code>. Select <code class="language-plaintext highlighter-rouge">Shell Command: Install 'code' command in PATH</code>.</p>

<h2 id="c-project">C++ Project</h2>

<p>Create a directory called simple in <code class="language-plaintext highlighter-rouge">~/cpp/simple</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/cpp/simple
</code></pre></div></div>

<p>Open the directory in Visual Studio Code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> ~/cpp/simple
code <span class="nb">.</span>
</code></pre></div></div>

<p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">C/C++ extension</a>.</p>

<h2 id="project-files">Project Files</h2>

<p>Add the following files:</p>

<h3 id="srcmaincpp"><code class="language-plaintext highlighter-rouge">src/main.cpp</code></h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello CMake!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="cmakeliststxt"><code class="language-plaintext highlighter-rouge">CMakeLists.txt</code></h3>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.20<span class="p">)</span>

<span class="nb">project</span><span class="p">(</span>simple<span class="p">)</span>

<span class="nb">add_executable</span><span class="p">(</span>simple src/main.cpp<span class="p">)</span>
</code></pre></div></div>

<h3 id="buildsh"><code class="language-plaintext highlighter-rouge">build.sh</code></h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/usr/bin/env bash</span>

<span class="nb">mkdir</span> <span class="nt">-p</span> ./build/debug
<span class="nb">pushd</span> ./build/debug
    cmake <span class="nt">-G</span> <span class="s1">'Ninja'</span> <span class="nt">-DCMAKE_BUILD_TYPE</span><span class="o">=</span>Debug  ../.. <span class="o">&amp;&amp;</span> <span class="se">\</span>
    ninja
    <span class="nv">ret</span><span class="o">=</span><span class="nv">$?</span>
<span class="nb">popd</span>  
</code></pre></div></div>

<h3 id="gitignore"><code class="language-plaintext highlighter-rouge">.gitignore</code></h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.cache/
build/
</code></pre></div></div>

<h2 id="test-the-build">Test the build</h2>

<p>Open Terminal in Visual Studio Code and test the build from command line:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.sh
</code></pre></div></div>

<h2 id="automate-the-build">Automate the build</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodetasksjson"><code class="language-plaintext highlighter-rouge">.vscode/tasks.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"label"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Build"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"shell"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"osx"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build.sh"</span><span class="p">,</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"group"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"kind"</span><span class="p">:</span><span class="w"> </span><span class="s2">"build"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"isDefault"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Test the build by pressing <code class="language-plaintext highlighter-rouge">Cmd + B</code>. Visual Studio Code should execute the <code class="language-plaintext highlighter-rouge">build.sh</code> script automatically.</p>

<h2 id="setup-debugging">Setup Debugging</h2>

<p>Add the following Visual Studio Code specific files to the <code class="language-plaintext highlighter-rouge">.vscode</code> subdir:</p>

<h3 id="vscodelaunchjson"><code class="language-plaintext highlighter-rouge">.vscode/launch.json</code></h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Launch (gdb)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cppdbg"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"cwd"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"osx"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"program"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}/build/debug/simple"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"MIMode"</span><span class="p">:</span><span class="w"> </span><span class="s2">"lldb"</span><span class="p">,</span><span class="w">
            </span><span class="p">},</span><span class="w">
        </span><span class="p">}</span><span class="w">    
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="test-the-debugging">Test the debugging</h2>

<p>Set a breakpoint on the first line of <code class="language-plaintext highlighter-rouge">int main()</code> inside <code class="language-plaintext highlighter-rouge">src/main.cpp</code>. Press <code class="language-plaintext highlighter-rouge">F5</code> to launch the debugger. It should stop at the breakpoint.</p>]]></content><author><name>Swift Software Group</name></author><category term="vscode" /><category term="cpp" /><category term="macos" /><summary type="html"><![CDATA[Before going through these steps make sure you have done Setup C++ development environment on macOS Visual Studio Code Download and install from Visual Studio Code site. Open Visual Studio Code and press Cmd + Shift + p. Select Shell Command: Install 'code' command in PATH.]]></summary></entry></feed>